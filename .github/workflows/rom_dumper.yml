name: Auto Firmware Dumper

on:
  workflow_dispatch:
    inputs:
      FIRMWARE_URL:
        description: 'Stock ROM Link'
        required: true
        default: ''
      DEVICE_BRAND:
        description: 'Device brand (Like xiaomi)'
        required: true
        default: ''
      DEVICE_CODENAME:
        description: 'Device codename (Like gingko)'
        required: true
        default: ''
      UPLOAD_LINEAGE_DT:
        description: 'Create LineageOS DT Repo'
        required: true
        default: ''
        type: choice
        options:
        - Okay
        - I do not want
      UPLOAD_TWRP_DT:
        description: 'Create TWRP DT Repo'
        required: true
        default: ''
        type: choice
        options:
        - Okay
        - I do not want
      USER_NAME:
        description: 'Name in GitHub Account'
        required: true
        default: ''
      USER_EMAIL:
        description: 'E-mail in GitHub Account'
        required: true
        default: ''

jobs:
  build:
    name: Auto Firmware Dumper
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GTOKEN }}
      TWT: ${{ github.event.inputs.UPLOAD_TWRP_DT }}
      LOT: ${{ github.event.inputs.UPLOAD_LINEAGE_DT }}
      DB: ${{ github.event.inputs.DEVICE_BRAND }}
      DC: ${{ github.event.inputs.DEVICE_CODENAME}}
      FUR: ${{ github.event.inputs.FIRMWARE_URL }}
      UN: ${{ github.event.inputs.USER_NAME }}
      UEM: ${{ github.event.inputs.USER_EMAIL }}
    permissions:
      contents: write
    steps:
    - name: Check Out
      uses: actions/checkout@v3
      
    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main
      
    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
       swap-size-gb: 12
        
    - name: Update Packages
      run: |
        sudo apt update
        sudo apt -y upgrade
        sudo apt -y install cpio aria2 git python3 neofetch tar

    - name: Setup GithubCLI
      run: |
        type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
        && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
        && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
        && sudo apt update \
        && sudo apt install gh -y

    - name: Clone and Setup DumprX
      run: |
        cd /home
        sudo mkdir Auto-Dumper
        sudo chmod 777 Auto-Dumper
        cd Auto-Dumper
        git clone https://github.com/DumprX/DumprX
        cd DumprX
        sudo chmod 777 setup.sh
        sudo chmod 777 dumper.sh
        bash setup.sh

    - name: Creating Dump
      run: |
        cd /home/Auto-Dumper/DumprX
        sudo bash dumper.sh ${{ env.FUR }}
        sudo chmod -R 777 out

    - name: Setting up git
      run: |
        git config --global user.name "${{ env.UN }}" && git config --global user.email "${{ env.UEM }}"

    - name: Uploading ROM Dump for GitHub Repository
      run: |
        cd /home/Auto-Dumper/DumprX/out
        sudo chmod -R 777 *
        dump_con="system"
        if [ -d "$dump_con" ]; then
           echo " "
        else
           echo "Failed!";
           cd /home/Auto-Dumper
           sudo rm -rf DumprX
           unset dump_con
           exit 1;
        fi;
        unset dump_cont
        los_dir="lineage-device-tree"
        if [ -d "$los_dir" ]; then
           cp -r lineage-device-tree /home/Auto-Dumper
        else
           echo "Lineage device tree not found!";
           unset los_dir
        fi;
        tw_dir="twrp-device-tree"
        if [ -d "$tw_dir" ]; then
           cp -r twrp-device-tree /home/Auto-Dumper
        else
           echo "TWRP device tree not found!";
           unset tw_dir
        fi;
        cd /home/Auto-Dumper/DumprX/out
        sudo rm -rf .git
        find /home/Auto-Dumper/DumprX/out -type f -size +50M -delete -exec echo "Deleted: "{} \;
        git init
        git branch -M dump-${{ env.DC }}
        git add .
        git commit -s -m "Dump for ${{ env.DB }} ${{ env.DC }}"
        gh repo create dump_${{ env.DB }}_${{ env.DC }} --public --description="Dump for ${{ env.DB }} ${{ env.DC }}." --source=. --remote=origin --push
        cd /home/Auto-Dumper
        sudo rm -rf DumprX

    - name: Uploading LineageOS Device Tree
      if: |
        env.TWT == 'Okay'
      run: |
        cd /home/Auto-Dumper/lineage-device-tree
        if [[ $(readlink BoardConfig.mk) ]]; then
           if [[ $(readlink .git) ]]; then
              sudo rm -rf .git
           fi
           git init
           git branch -M lineage-${{ env.DC }}
           git add .
           git commit -s -m "${{ env.DC }} : LineageOS compatible device tree"
           gh repo create lineage_device_${{ env.DB }}_${{ env.DC }} --public --description="LineageOS compatible tree for ${{ env.DC }}." --source=. --remote=origin --push)
        else
           echo "The LineageOS compatible device tree has not been created.";
           echo "Pushing Canceled."
        fi;

    - name: Uploading TWRP Device Tree
      if: |
        env.LOT == 'Okay'
      run: |
        cd /home/Auto-Dumper
        cd /home/Auto-Dumper/twrp-device-tree
        if [[ $(readlink BoardConfig.mk) ]]; then
           if [[ $(readlink .git) ]]; then
              sudo rm -rf .git
           fi
           git init
           git branch -M twrp-${{ env.DC }}
           git add .
           git commit -s -m "${{ env.DC }} : TWRP compatible device tree"
           gh repo create twrp_device_${{ env.DB }}_${{ env.DC }} --public --description="TWRP compatible tree for ${{ env.DC }}." --source=. --remote=origin --push)
        else
           echo "The TWRP compatible device tree has not been created.";
           echo "Pushing Canceled."
        fi;
